[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ml-threshold-selection"
dynamic = ["version"]
description = "Machine learning-driven adaptive threshold selection for XRCT particle analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "VincentDD1125", email = "vincent@example.com"},
]
maintainers = [
    {name = "VincentDD1125", email = "vincent@example.com"},
]
keywords = ["xrct", "particle analysis", "machine learning", "threshold selection", "image processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.19.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
    "lightgbm>=3.2.0",
    "joblib>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "jupyter>=1.0",
    "ipykernel>=6.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/VincentDD1125/ML-Threshold-Selection"
Documentation = "https://github.com/VincentDD1125/ML-Threshold-Selection/docs"
Repository = "https://github.com/VincentDD1125/ML-Threshold-Selection.git"
"Bug Tracker" = "https://github.com/VincentDD1125/ML-Threshold-Selection/issues"

[project.scripts]
ml-threshold-supervised = "ml_threshold_selection.scripts.run_supervised_demo:main"
ml-threshold-semi-supervised = "ml_threshold_selection.scripts.run_semi_supervised_demo:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"ml_threshold_selection" = [
    "examples/data/*.csv",
    "examples/data/*.txt",
    "gui/icons/*.png",
    "gui/icons/*.ico",
]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ml_threshold_selection",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src/ml_threshold_selection"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "lightgbm.*",
    "matplotlib.*",
    "seaborn.*",
    "tkinter.*",
]
ignore_missing_imports = true
